package fr.inrialpes.exmo.mlid.test;

import java.util.ArrayList;

import fr.inrialpes.exmo.mlid.preprocess.Stemming;
import junit.framework.TestCase;

public class StemmingTest extends TestCase {

	private String testEn = "Why are people so bothered about truly random numbers instead of ones generated by a program?";

	private String testCrtString = "Why?";
	private String testCrtString2 = "Why";
	
	private ArrayList<String> testGetList = new ArrayList<String>();

	private Stemming testStem = null;

	public StemmingTest(String arg0) {
		super(arg0);
	}

	public static void main(String[] args) {
		junit.textui.TestRunner.run(StemmingTest.class);
	}

	protected void setUp() throws Exception {
		super.setUp();
		testStem = new Stemming(testEn,"en");
	}

	protected void tearDown() throws Exception {
		super.tearDown();
		testStem = null;
	}

	public void testProcess() {
		fail("Not yet implemented");
	}

	public void testStremmingPreprocessFilter() {
		fail("Not yet implemented");
	}

	public void testStremmingString() {
		fail("Not yet implemented");
	}

	public void testStremming() {
		fail("Not yet implemented");
	}

	public void testGetCrtString() {
		testStem = new Stemming(testCrtString,"en");
		assertTrue(testStem.getCrtString().equals("Why?"));
		testStem = new Stemming(testCrtString2,"en");
		assertTrue(testStem.getCrtString().equals("Whi"));
		// fail("Not yet implemented");
	}

	public void testGetList() {
		testGetList.add("Whi");
		testGetList.add("are");
		testGetList.add("peopl");
		testGetList.add("so");
		testGetList.add("bother");
		testGetList.add("about");
		testGetList.add("truli");
		testGetList.add("random");
		testGetList.add("number");
		testGetList.add("instead");
		testGetList.add("of");
		testGetList.add("one");
		testGetList.add("generat");
		testGetList.add("by");
		testGetList.add("a");
		testGetList.add("program?");
		assertTrue(testStem.getList().equals(testGetList));
		// fail("Not yet implemented");
	}

}
